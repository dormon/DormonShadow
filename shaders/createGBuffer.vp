#if defined(VERTEX_SHADER)
uniform mat4 projection = mat4(1);
uniform mat4 view       = mat4(1);

layout(location=0)in vec3 position;
layout(location=1)in vec3 normal;

out vec3 vPosition;
out vec3 vNormal;

void main(){
  gl_Position = projection*view*vec4(position,1);
  vPosition = position;
  vNormal   = normal;
}
#endif



#if defined(FRAGMENT_SHADER)
layout(location=0)out uvec4 fColor;
layout(location=1)out vec4  fPosition;
layout(location=2)out vec4  fNormal; 

in vec3 vPosition;
in vec3 vNormal;

void main(){
  vec3  diffuseColor   = vec3(.5,.5,.5);
  vec3  specularColor  = vec3(1);
  vec3  normal         = vNormal;
  float specularFactor = 1;

  uvec4 color  = uvec4(0);
  color.xyz   += uvec3(diffuseColor  *0xff);
  color.xyz   += uvec3(specularColor *0xff)<<8;
  color.w      = uint (specularFactor*0xff);

  fColor    = color;
  fPosition = vec4(vPosition,1);
  fNormal   = vec4(normal,-dot(vPosition,normal));
}
#endif
